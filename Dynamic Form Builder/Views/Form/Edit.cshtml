@model Dynamic_Form_Builder.Models.Form

@{
    ViewData["Title"] = "Edit Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h3>Edit Form: @Model.Title</h3>

    <form id="editForm">
        <input type="hidden" id="FormId" value="@Model.FormId" />

        <div class="mb-3">
            <label for="FormTitle" class="form-label">Form Title <span class="text-danger">*</span></label>
            <input id="FormTitle" class="form-control" value="@Model.Title" required />
        </div>

        <div id="dropdownContainer">
            @for (int i = 0; i < Model.Fields.Count; i++)
            {
                <div class="dropdown-field border rounded p-3 mb-3">
                    <label class="form-label">
                        <strong>@Model.Fields[i].Label</strong>
                        @if (Model.Fields[i].IsRequired)
                        {
                            <span class="text-danger">*</span>
                        }
                    </label>
                    <input type="hidden" class="field-label" value="@Model.Fields[i].Label" />
                    <select class="form-select mb-2 field-select" required>
                        <option value="">Select Item</option>
                        <option value="Option 1" selected="@(Model.Fields[i].SelectedOption == "Option 1" ? "selected" : null)">Option 1</option>
                        <option value="Option 2" selected="@(Model.Fields[i].SelectedOption == "Option 2" ? "selected" : null)">Option 2</option>
                        <option value="Option 3" selected="@(Model.Fields[i].SelectedOption == "Option 3" ? "selected" : null)">Option 3</option>
                    </select>
                </div>
            }
        </div>

        <button type="button" id="addMoreBtn" class="btn btn-info mb-3">Add More</button>

        <div class="mt-3">
            <button type="submit" class="btn btn-primary">Save Changes</button>
            <a asp-action="Index" class="btn btn-secondary">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            let fieldIndex = $('#dropdownContainer .dropdown-field').length;

            function addDropdown() {
                fieldIndex++;
                const labelText = 'Level ' + fieldIndex;
                const newFieldHtml = `
                    <div class="dropdown-field border rounded p-3 mb-3">
                        <label class="form-label"><strong>${labelText}</strong><span class="text-danger">*</span></label>
                        <input type="hidden" class="field-label" value="${labelText}" />
                        <select class="form-select mb-2 field-select" required>
                            <option value="">Select Item</option>
                            <option value="Option 1">Option 1</option>
                            <option value="Option 2">Option 2</option>
                            <option value="Option 3">Option 3</option>
                        </select>
                    </div>
                `;
                $('#dropdownContainer').append(newFieldHtml);
            }

            $('#addMoreBtn').click(function () {
                addDropdown();
            });

            $('#editForm').submit(function (e) {
                e.preventDefault();

                if (!document.getElementById("editForm").checkValidity()) {
                    document.getElementById("editForm").reportValidity();
                    return;
                }

                var formObj = {
                    FormId: parseInt($('#FormId').val()),
                    Title: $('#FormTitle').val().trim(),
                    Fields: []
                };

                $('#dropdownContainer .dropdown-field').each(function () {
                    var label = $(this).find('.field-label').val();
                    var selectedOption = $(this).find('.field-select').val();

                    formObj.Fields.push({
                        Label: label,
                        SelectedOption: selectedOption,
                        IsRequired: true // All fields are required now
                    });
                });

                $.ajax({
                    url: '@Url.Action("Edit", "Form")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formObj),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Saved!',
                                text: response.message,
                                timer: 2000,
                                showConfirmButton: false
                            }).then(() => {
                                window.location.href = '@Url.Action("Index", "Form")';
                            });
                        } else {
                            Swal.fire('Error', response.message, 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('Error', 'Something went wrong!', 'error');
                    }
                });
            });
        });
    </script>
}
