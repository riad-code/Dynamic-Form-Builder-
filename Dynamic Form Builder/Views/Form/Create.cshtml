@model Dynamic_Form_Builder.Models.Form

@{
    ViewData["Title"] = "Dynamic Form Builder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h4><i class="bi bi-tags-fill"></i> Dynamic Form Builder</h4>

    <form method="post" asp-action="Create" id="formBuilder">
        <div class="card p-3">
            <div class="mb-3">
                <label class="form-label"><strong>Form Title</strong></label>
                <input type="text" name="Title" class="form-control" placeholder="Form Title.." required />
            </div>

            <div id="dropdownFields">
                <div class="dropdown-field mb-3 border p-2 rounded">
                    <label><strong>Level 1</strong></label>
                    <input type="hidden" name="Fields[0].Label" value="Level 1" />
                    <select name="Fields[0].SelectedOption" class="form-select mb-2">
                        <option value="">Select Item</option>
                        <option value="Option 1">Option 1</option>
                        <option value="Option 2">Option 2</option>
                        <option value="Option 3">Option 3</option>
                    </select>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="Fields[0].IsRequired" />
                        <label class="form-check-label text-danger">Required *</label>
                    </div>
                </div>

                <div class="dropdown-field mb-3 border p-2 rounded">
                    <label><strong>Level 2</strong></label>
                    <input type="hidden" name="Fields[1].Label" value="Level 2" />
                    <select name="Fields[1].SelectedOption" class="form-select mb-2">
                        <option value="">Select Item</option>
                        <option value="Option 1">Option 1</option>
                        <option value="Option 2">Option 2</option>
                        <option value="Option 3">Option 3</option>
                    </select>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="Fields[1].IsRequired" />
                        <label class="form-check-label text-danger">Required *</label>
                    </div>
                </div>
            </div>

            <div class="d-flex gap-2">
                <button type="button" class="btn btn-info text-white" onclick="addDropdown()">Add More</button>
                <button type="submit" class="btn btn-success">Save</button>
                <button type="reset" class="btn btn-dark">Clear</button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        let fieldIndex = 2;

        function addDropdown() {
            const field = `
            <div class="dropdown-field mb-3 border p-2 rounded">
                <label><strong>Level ${fieldIndex + 1}</strong></label>
                <input type="hidden" name="Fields[${fieldIndex}].Label" value="Level ${fieldIndex + 1}" />
                <select name="Fields[${fieldIndex}].SelectedOption" class="form-select mb-2">
                    <option value="">Select Item</option>
                    <option value="Option 1">Option 1</option>
                    <option value="Option 2">Option 2</option>
                    <option value="Option 3">Option 3</option>
                </select>
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" name="Fields[${fieldIndex}].IsRequired" />
                    <label class="form-check-label text-danger">Required *</label>
                </div>
            </div>
            `;
            document.getElementById('dropdownFields').insertAdjacentHTML('beforeend', field);
            fieldIndex++;
        }
    </script>
}
