@{
    ViewData["Title"] = "Create Dynamic Form";
}

<div class="container mt-4">
    <h4><i class="bi bi-tags-fill"></i> Dynamic Form Builder</h4>

    <form id="formBuilder">
        <div class="card p-3">
            <div class="mb-3">
                <label class="form-label"><strong>Form Title</strong></label>
                <input type="text" id="formTitle" class="form-control" placeholder="Form Title.." required />
            </div>

            <div id="dropdownFields">
                @for (var i = 0; i < 2; i++)
                {
                    <div class="dropdown-field mb-3 border p-2 rounded">
                        <label><strong>Level @(i + 1)</strong></label>
                        <input type="hidden" value="Level @(i + 1)" />
                        <select class="form-select mb-2">
                            <option value="">Select Item</option>
                            <option value="Option 1">Option 1</option>
                            <option value="Option 2">Option 2</option>
                            <option value="Option 3">Option 3</option>
                        </select>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" />
                            <label class="form-check-label text-danger">Required *</label>
                        </div>
                    </div>
                }
            </div>

            <div class="d-flex gap-2">
                <button type="button" class="btn btn-info text-white" onclick="addDropdown()">Add More</button>
                <button type="submit" class="btn btn-success">Save</button>
                <button type="reset" class="btn btn-dark">Clear</button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        let fieldIndex = 2;

        function addDropdown() {
            const field = `
                <div class="dropdown-field mb-3 border p-2 rounded">
                    <label><strong>Level ${fieldIndex + 1}</strong></label>
                    <input type="hidden" value="Level ${fieldIndex + 1}" />
                    <select class="form-select mb-2">
                        <option value="">Select Item</option>
                        <option value="Option 1">Option 1</option>
                        <option value="Option 2">Option 2</option>
                        <option value="Option 3">Option 3</option>
                    </select>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" />
                        <label class="form-check-label text-danger">Required *</label>
                    </div>
                </div>`;
            document.getElementById('dropdownFields').insertAdjacentHTML('beforeend', field);
            fieldIndex++;
        }

        document.getElementById("formBuilder").addEventListener("submit", function (e) {
            e.preventDefault();

            const formTitle = document.getElementById("formTitle").value.trim();
            if (!formTitle) {
                Swal.fire("Error", "Please enter a form title.", "error");
                return;
            }

            const fields = [];
            document.querySelectorAll(".dropdown-field").forEach((fieldDiv) => {
                const label = fieldDiv.querySelector("input[type='hidden']").value;
                const selectedOption = fieldDiv.querySelector("select").value;
                const isRequired = fieldDiv.querySelector("input[type='checkbox']").checked;

                fields.push({ label, selectedOption, isRequired });
            });

            const formData = {
                Title: formTitle,
                Fields: fields
            };

            fetch('/Form/Create', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData)
            })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire("Saved!", data.message, "success").then(() => {
                            window.location.href = "/Form/Index"; // ✅ Go to main list page
                        });
                    } else {
                        Swal.fire("Error", data.message, "error");
                    }
                })
                .catch(() => {
                    Swal.fire("Error", "Something went wrong", "error");
                });
        });
    </script>
}
